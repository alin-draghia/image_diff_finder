//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ImgDiff : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ImgDiff(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ImgDiff obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ImgDiff() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ImgCmpLibPINVOKE.delete_ImgDiff(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int left {
    set {
      ImgCmpLibPINVOKE.ImgDiff_left_set(swigCPtr, value);
    } 
    get {
      int ret = ImgCmpLibPINVOKE.ImgDiff_left_get(swigCPtr);
      return ret;
    } 
  }

  public int top {
    set {
      ImgCmpLibPINVOKE.ImgDiff_top_set(swigCPtr, value);
    } 
    get {
      int ret = ImgCmpLibPINVOKE.ImgDiff_top_get(swigCPtr);
      return ret;
    } 
  }

  public int width {
    set {
      ImgCmpLibPINVOKE.ImgDiff_width_set(swigCPtr, value);
    } 
    get {
      int ret = ImgCmpLibPINVOKE.ImgDiff_width_get(swigCPtr);
      return ret;
    } 
  }

  public int height {
    set {
      ImgCmpLibPINVOKE.ImgDiff_height_set(swigCPtr, value);
    } 
    get {
      int ret = ImgCmpLibPINVOKE.ImgDiff_height_get(swigCPtr);
      return ret;
    } 
  }

  public float sad {
    set {
      ImgCmpLibPINVOKE.ImgDiff_sad_set(swigCPtr, value);
    } 
    get {
      float ret = ImgCmpLibPINVOKE.ImgDiff_sad_get(swigCPtr);
      return ret;
    } 
  }

  public ImgDiff() : this(ImgCmpLibPINVOKE.new_ImgDiff__SWIG_0(), true) {
  }

  public ImgDiff(int left, int top, int width, int height, float sad) : this(ImgCmpLibPINVOKE.new_ImgDiff__SWIG_1(left, top, width, height, sad), true) {
  }

}
